@page
@using PaymentForm.DAL.Entities
@{
    ViewData["Title"] = "Payment Voucher Details";
}
<style type="text/css">
    .dx-datagrid .dx-row {
        border-bottom: 1px solid #ccc; /* Border between rows */
    }



    .horizontal-container {
        display: flex;
        gap: 10px; /* Adds spacing between buttons */
        justify-content: start; /* Aligns buttons to the left */
        align-items: center; /* Vertically centers the buttons */
        margin: 15px;
    }

    .dx-selectbox .dx-texteditor-input {
        text-align: center; /* Centers the text inside the input */
    }



    .button-alignment-down {
        margin-bottom: 10px
    }

    .card {
        border: 1px solid #ddd;
        border-radius: 8px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
        padding: 5px;
        margin: 20px auto;
        max-width: 1300px;
        background-color: #d0e2e7;
    }
</style>
<div id="costAllocationPopup" style="display:none;">
    <div style="margin-bottom:10px">
        @(Html.DevExtreme().Button()
            .ID("btnSaveCostAllocation")
            .Icon("save")
            .Text("Save")
            .OnClick("function() { saveCostAllocation(); }")
            )
    </div>
</div>
<div class="card">
    @* <div class="card-header" style="background-color: #4a4a9c; color: white; font-weight: bold;">
    Payment Voucher Details
    </div> *@

    <h2>@ViewData["Title"]</h2>

    <div class="content-container">
        <div class="dx-fieldset horizontal-container" style="margin-bottom:0px">
            <div class="form-group">
                <label for="PurchaseVoucherNo" class="button-alignment-down">Voucher No</label>
                @(
                    Html.DevExtreme().TextBox()
                    .ID("VoucherNo")
                    .Value(null)
                    )
            </div>
            <div class="form-group">
                <label for="VoucherDate" class="button-alignment-down">Voucher Date</label>
                @(Html.DevExtreme().DateBox()
                    .ID("VoucherDate")
                    .InputAttr("aria-label", "Date")
                    .LabelMode(EditorLabelMode.Outside)
                    .Type(DateBoxType.Date)
                    .DisplayFormat("yyyy-MM-dd")
                    .Value(new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1))
                    )
            </div>
            <div class="form-group">
                <label for="EffectiveDate" class="button-alignment-down">Effective Date</label>
                @(Html.DevExtreme().DateBox()
                    .ID("VoucherEffectiveDate")
                    .InputAttr("aria-label", "Date")
                    .LabelMode(EditorLabelMode.Outside)
                    .Type(DateBoxType.Date)
                    .DisplayFormat("yyyy-MM-dd")
                    .Value(new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1))
                    )
            </div>
            <div class="form-group">
                <label for="" class="button-alignment-down">Payment Account:</label>
                @(Html.DevExtreme().DropDownBox()
                    .DataSource(d => d.WebApi()
                    .Controller("VoucherMaster")
                    .LoadAction("GetPaymentAccounts")
                    .LoadMode(DataSourceLoadMode.Raw)
                    .Key("AccountGroupId")
                    )
                    .LabelMode(EditorLabelMode.Outside)
                    .ID("accountDropDownBox")
                    .ShowClearButton(true)
                    .AcceptCustomValue(true)
                    .OpenOnFieldClick(false)
                    .ValueChangeEvent("input")
                    .HoverStateEnabled(true)
                    .ValueExpr("AccountGroupId")
                    .DisplayExpr("AccountHead")
                    .OnInput("dropDownBoxOnInput")
                    .OnOpened("onOpened")
                    .Width(720)
                    .TabIndex(1)
                    .DropDownOptions(o => o
                    .Width(1000)
                    )
                    .OnKeyDown("onKeyDown")
                    //.OnValueChanged("dropDownBoxValueChanged")
                    .ContentTemplate(new TemplateName("PaymentAmountContentTemplate"))
                    )

            </div>
            @*   <div class="form-group">
            <div class="button-alignment-down">
            <label for="SubmittedDate">Received Date</label>
            @(Html.DevExtreme().CheckBox()
            .ID("ReceivedCheckBox")
            )
            </div>
            @(Html.DevExtreme().DateBox()
            .ID("ReceivedDate")
            .InputAttr("aria-label", "Date")
            .LabelMode(EditorLabelMode.Outside)
            .Type(DateBoxType.Date)
            .DisplayFormat("yyyy-MM-dd")
            .Value(new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1))
            )
            </div> *@

        </div>
        @*     <div class="dx-fieldset horizontal-container " style="margin-top:-15px;margin-bottom:0px">

        <div class="form-group">
        <label for="SupplierName" class="button-alignment-down">Dr/Cr:</label>
        @(Html.DevExtreme().DropDownBox()
        .DataSource(d => d.WebApi()
        .Controller("")
        .LoadAction("")
        .LoadMode(DataSourceLoadMode.Raw)
        .Key("AccountId")
        )
        .LabelMode(EditorLabelMode.Outside)
        .ID("")
        .ShowClearButton(true)
        .AcceptCustomValue(true)
        .OpenOnFieldClick(false)
        .ValueChangeEvent("input")
        .HoverStateEnabled(true)
        .ValueExpr("AccountId")
        .DisplayExpr("AccountHead")
        .OnInput("dropDownBoxOnInput")
        .OnOpened("onOpened")
        .Width(120)
        .TabIndex(1)
        .DropDownOptions(o => o
        .Width(1000)
        )
        .OnKeyDown("onKeyDown")
        //.OnValueChanged("dropDownBoxValueChanged")
        .ContentTemplate(new TemplateName("DrCrContentTemplate"))
        )

        </div>

        <div class="form-group">
        <label for="SupplierName" class="button-alignment-down">Account Head:</label>
        @(Html.DevExtreme().DropDownBox()
        .DataSource(d => d.WebApi()
        .Controller("VoucherMaster")
        .LoadAction("GetAccountHead")
        .LoadMode(DataSourceLoadMode.Raw)
        .Key("AccountId")
        )
        .LabelMode(EditorLabelMode.Outside)
        .ID("")
        .ShowClearButton(true)
        .AcceptCustomValue(true)
        .OpenOnFieldClick(false)
        .ValueChangeEvent("input")
        .HoverStateEnabled(true)
        .ValueExpr("AccountId")
        .DisplayExpr("AccountHead")
        .OnInput("dropDownBoxOnInput")
        .OnOpened("onOpened")
        .Width(720)
        .TabIndex(1)
        .DropDownOptions(o => o
        .Width(1000)
        )
        .OnKeyDown("onKeyDown")
        //.OnValueChanged("dropDownBoxValueChanged")
        .ContentTemplate(new TemplateName("DrCrContentTemplate"))
        )

        </div>

        <div class="form-group" style="margin-top:56px;margin-left:-10px;">
        @(Html.DevExtreme().Button()
        .ID("btnAddVoucher")
        .Icon("plus")
        )
        </div>
        <div class="form-group" style="margin-top:56px;margin-left:-10px">
        @(Html.DevExtreme().Button()
        .ID("btnEditVoucher")
        .Icon("edit")
        )
        </div>
        @* <div class="form-group">
        <label for="DueDate" class="button-alignment-down">DueDate or Payment Terms</label>
        @(Html.DevExtreme().DateBox()
        .ID("DueDate")
        .InputAttr("aria-label", "Date")
        .LabelMode(EditorLabelMode.Outside)
        .Type(DateBoxType.Date)
        .DisplayFormat("yyyy-MM-dd")
        .Value(new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1))
        )
        </div> *@
        @*    <div class="form-group">
        <label for="NoOfDays" class="button-alignment-down">No. Of Days</label>
        @(
        Html.DevExtreme().NumberBox()
        .ID("NoOfDays")
        .Width(100)
        .Value(0)
        .ShowSpinButtons(true)
        .Min(0)
        .Max(1000)
        .Step(1)
        )
        </div>
        </div> *@



        <div class="dx-fieldset horizontal-container " style="margin-bottom:0px;">
            @* <div class="dx-fieldset horizontal-container " style="margin-top:10px;margin-bottom:0px;"> *@
            <div class="form-group">
                <div class="button-alignment-down">
                    <label for="DrCr">Dr/Cr</label>
                </div>
                @(
                    Html.DevExtreme().SelectBox()
                    .ID("sbDrCr")
                    .DataSource(new[] { "Dr", "Cr" })
                    .Value("Dr")
                    .Placeholder("Select Transaction Type")
                    .Width(90)
                    )
            </div>
            <div class="form-group">
                <label for="AccountHead" class="button-alignment-down">Account Head:</label>
                @(Html.DevExtreme().DropDownBox()
                    .DataSource(d => d.WebApi()
                    .Controller("VoucherMaster")
                    .LoadAction("GetAccountHead")
                    .LoadMode(DataSourceLoadMode.Raw)
                    .Key("VoucherNo")
                    )
                    .LabelMode(EditorLabelMode.Outside)
                    .ID("ddAccountHead")
                    .ShowClearButton(true)
                    .AcceptCustomValue(true)
                    .OpenOnFieldClick(false)
                    .ValueChangeEvent("input")
                    .HoverStateEnabled(true)
                    .ValueExpr("VoucherNo")
                    .DisplayExpr("AccountHead")
                    .OnInput("dropDownBoxOnInput")
                    .OnOpened("onOpened")
                    .Width(650)
                    .TabIndex(1)
                    .DropDownOptions(o => o
                    .Width(1000)
                    )
                    .OnKeyDown("onKeyDown")
                    //.OnValueChanged("dropDownBoxValueChanged")
                    .ContentTemplate(new TemplateName("AccountHeadContentTemplate"))
                    )
            </div>
            <div class="form-group" style="margin-top:56px;margin-left:-10px">
                @(Html.DevExtreme().Button()
                    .ID("btnAddAHead")
                    .Icon("plus")
                    )
            </div>
            <div class="form-group" style="margin-top:56px;margin-left:-10px">
                @(Html.DevExtreme().Button()
                    .ID("btnEditAHead")
                    .Icon("edit")
                    )
            </div>
            <div class="form-group" style="max-width:25000px">
                <label for="Amount" class="button-alignment-down ">Amount</label>
                @(
                    Html.DevExtreme().TextBox()
                    .ID("txtVoucherAmount")
                    .Value("0")
                    )
            </div>
        </div>

        <div class="dx-fieldset horizontal-container " style="margin-top:0px;margin-bottom:0px;padding-top:10px;">
            <div class="form-group" style="padding-left:20px">
                <label for="Amount" class="button-alignment-down" style="margin-right:25px">Narration</label>
            </div>
            <div class="form-group">
                @(
                    Html.DevExtreme().TextArea()
                    .ID("txtEntryNarration")
                    .Value("")
                    .Height(70)
                    .Width(720)
                    .Placeholder("Enter your comments here...")
                    .MaxLength(500)
                    )
            </div>
            <div class="form-group" style="">
                @(Html.DevExtreme().Button()
                    .ID("btnVoucherEntry")
                    .Text("ADD")
                    .Height(70)
                    .Width(178)
                    .Icon("plus")
                    .OnClick("function() { addVoucherEntry(); }")
                    )
            </div>

        </div>
        <div class="dx-field ledgerResult">
            @*  @(
            Html.DevExtreme().DataGrid<Qry201VoucherEntryScreenDisplay>()
            .ID("dataGrid")
            .DataSource(ds => ds.Mvc()
            .Controller("VoucherMaster") // Specify the controller name
            .LoadAction("GetVoucherEntryPaymentGrid") // Specify the action that returns data
            )
            .RemoteOperations(true) // Enable remote data operations

            .Columns(columns =>
            {
            columns.AddFor(m => m.DrCr);
            columns.AddFor(m => m.AccountHead);
            columns.AddFor(m => m.DrAmount);
            columns.AddFor(m => m.CrAmount);
            columns.AddFor(m => m.EntryNarration);
            columns.AddFor(m => m.SysRemarks);
            })
            .Paging(p => p.PageSize(10))
            .AllowColumnReordering(true) // Enable column reordering
            .AllowColumnResizing(true)   // Enable column resizing
            .ColumnFixing(fixing => fixing.Enabled(true)) // Allow column fixing (pinning)
            .HeaderFilter(filter => filter.Visible(true))
            .Height(450)
            .ColumnAutoWidth(true)
            .FilterRow(filterRow => filterRow.Visible(true)) // Initially hide the FilterRow
            .GroupPanel(groupPanel => groupPanel.Visible(true)) // Hide group panel
            .ShowBorders(true)
            .Width("100%")
            ) *@
            @(
                Html.DevExtreme().DataGrid<PaymentForm.DAL.Entities.Qry201VoucherEntryScreenDisplay>()
                .ID("dataGrid")
                .RemoteOperations(false)
                .Columns(columns =>
                {
                    columns.AddFor(m => m.DrCr).Caption("Dr/Cr");
                    columns.AddFor(m => m.AccountHead).Caption("Account Head");
                    columns.AddFor(m => m.DrAmount).Caption("Debit").Alignment(HorizontalAlignment.Right).CustomizeText(
                    "function(e) { return e.value.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }); }"

                    );
                    columns.AddFor(m => m.CrAmount).Caption("Credit").Alignment(HorizontalAlignment.Right).CustomizeText(
                    "function(e) { return e.value.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }); }"

                    );
                    columns.AddFor(m => m.EntryNarration).Caption("Entry Narration");
                    columns.AddFor(m => m.SysRemarks).Caption("Remarks");
                })
                //.ColumnChooser(columnChooser => columnChooser.Enabled(true).Title("Column Chooser").Mode(GridColumnChooserMode.Select))
                .AllowColumnReordering(true) // Enable column reordering
                .AllowColumnResizing(true)   // Enable column resizing
                .ColumnFixing(fixing => fixing.Enabled(true)) // Allow column fixing (pinning)
                .HeaderFilter(filter => filter.Visible(true))
                .Height(250)
                .ColumnAutoWidth(true)
                .FilterRow(filterRow => filterRow.Visible(false)) // Initially hide the FilterRow
                .GroupPanel(groupPanel => groupPanel.Visible(false)) // Display group panel
                .ShowBorders(true)
                .Width("100%")
                )
        </div>



        <div class="container">
            <div class="row g-3">
                <!-- First Row for Cheque No/Reference No and Voucher Narration with Button -->
                <div class="col-md-12 backgroundcolor" style="padding-top:10px; padding-bottom:10px;">
                    <div class="row align-items-center">
                        <!-- Cheque No/Reference No with Popup Button -->
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="ChequeNo">Cheque No/Reference No</label>
                                <div class="input-group">
                                    @(
                                        Html.DevExtreme().TextBox()
                                        .ID("ChequeNoReferenceNo")
                                        .Value(null)
                                        .Width(257)
                                        )
                                    <span class="input-group-append">
                                        @(
                                            Html.DevExtreme().Button()
                                            .ID("btnChequePopup")
                                            .Text("...")
                                            .Width(40)
                                            .Height(35)
                                            .ElementAttr(new { @class = "input-button" })
                                            .OnClick("showChequePopup")
                                            )
                                    </span>
                                </div>
                                @*  <div class="popup"> *@
                                @(
                                    Html.DevExtreme().Popup()
                                    .ID("chequePopup")
                                    .Title("Cheque Details")
                                    .Visible(false)
                                    @* .Options(new { closeOnOutsideClick = true }) *@
                                    .HideOnOutsideClick(false)
                                    .ShowCloseButton(true) // Display close button
                                    .Width(1000)
                                    .Height(400)
                                    .ContentTemplate(@<div>
                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label for="ChequeNo" class="button-alignment-down">Cheque No</label>
                                                @(Html.DevExtreme().TextBox()
                                                .ID("ChequeNo")
                                                .Value(null)
                                                )


                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label for="VoucherNo1" class="button-alignment-down">Voucher No</label>
                                                @(Html.DevExtreme().TextBox()
                                                .ID("VoucherNo1")
                                                .Value(null)
                                                )
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label for="ChequeDate" class="button-alignment-down">Cheque Date</label>
                                                @(Html.DevExtreme().DateBox()
                                                .ID("ChequeDate")
                                                .InputAttr("aria-label", "Date")
                                                .LabelMode(EditorLabelMode.Outside)
                                                .Type(DateBoxType.Date)
                                                .DisplayFormat("yyyy-MM-dd")
                                                .Value(new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1))
                                                )
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label for="PlaceofIssue" class="button-alignment-down">Place of Issue</label>
                                                @(Html.DevExtreme().TextBox()
                                                .ID("PlaceofIssue")
                                                .Value(null)
                                                )
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label for="ChequeIssuedinfavourof" class="button-alignment-down">Cheque Issued in favour of</label>
                                                @(Html.DevExtreme().TextBox()
                                                .ID("ChequeIssuedinfavourof")
                                                .Value(null) )
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="AmountinWords" class="button-alignment-down">AmountinWords</label>
                                                @(Html.DevExtreme().TextBox()
                                                .ID("AmountinWords")
                                                .Value(null))
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="AmountinSAR" class="button-alignment-down">AmountinSAR</label>
                                                @(Html.DevExtreme().NumberBox()
                                                .ID("AmountinSAR")
                                                .Width(100)
                                                .Value(0)
                                                .ShowSpinButtons(true)
                                                .Min(0)
                                                .Max(1000)
                                                .Step(1))
                                            </div>
                                        </div>
                                    </div>

                                    <div>
                                        @await Html.PartialAsync("_ChequeFooter")
                                    </div>
                                </div>)
                                    )

                            </div>
                        </div>
                        @* </div> *@

                        <!-- Voucher Narration -->
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="VoucherNarration">Voucher Narration</label>
                                @(
                                    Html.DevExtreme().TextBox()
                                    .ID("VoucherNarration")
                                    .Value(null)
                                    )
                            </div>
                        </div>

                        <!-- Button to the right -->
                        <div class="col-md-2 d-flex justify-content-end">
                            <div class="form-group">
                                @(Html.DevExtreme().Button()
                                    .ID("btnAttachment")
                                    .Icon("fa fa-book")
                                    .Height(40)
                                    .Width(70)
                                    )
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Second Row for Bill No, Bill Date, Bill Paid To, and Remarks -->
                <div class="col-md-12 backgroundcolor" style="padding-top:1px; padding-bottom:1px;">
                    <div class="row">
                        <!-- Bill No -->
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="BillNo">Bill No</label>
                                @(
                                    Html.DevExtreme().TextBox()
                                    .ID("BillNo")
                                    .Value(null)
                                    )
                            </div>
                        </div>

                        <!-- Bill Date -->
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="BillDate">Bill Date</label>
                                @(Html.DevExtreme().DateBox()
                                    .ID("BillDate")
                                    .InputAttr("aria-label", "Date")
                                    .LabelMode(EditorLabelMode.Outside)
                                    .Type(DateBoxType.Date)
                                    .DisplayFormat("yyyy-MM-dd")
                                    .Value(new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1))
                                    )
                            </div>
                        </div>

                        <!-- Bill Paid To -->
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="BillPaidTo">Bill Paid To</label>
                                @(
                                    Html.DevExtreme().TextBox()
                                    .ID("BillPaidTo")
                                    .Value(null)
                                    )
                            </div>
                        </div>

                        <!-- Remarks -->
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="Remarks">Remarks</label>
                                @(
                                    Html.DevExtreme().TextBox()
                                    .ID("Remarks")
                                    .Value(null)
                                    )
                            </div>
                        </div>

                    </div>
                </div>

                <!-- Third Row for Payment Account, Verified By, Verified On, Approved By, Approved On -->
                <div class="col-md-12 backgroundcolor" style="padding-top:1px; padding-bottom:1px;">
                    <div class="row mt-3 align-items-center">
                        <!-- Payment Account -->
                        @*  <div class="col-md-6">
                        <div class="form-group">
                        <label for="VoucherType">Payment Account:</label>
                        @(
                        Html.DevExtreme().SelectBox()
                        .ID("VoucherType")
                        .DataSource(new[] { "Cash Payment", "Bank Payment"})
                        .Value(null)
                        .Width(520)

                        )
                        </div>
                        </div> *@
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="VoucherType">AccountType:</label>
                                @(
                                    Html.DevExtreme().SelectBox()
                                    .ID("VoucherType")
                                    .DataSource(new[] { "Cash Payment" })
                                    .Value("Cash Payment")
                                    .Width(520)

                                    )
                            </div>
                        </div>

                        <!-- Verified By and Approved By Section -->
                        <div class="col-md-6">
                            <div class="row">
                                <div class="col-md-6">
                                    <div>
                                        @(Html.DevExtreme().CheckBox()
                                            .ID("VerifiedBy")
                                            )<span style="margin-left:5px">Verified By:</span>
                                    </div>
                                    <div style="margin-left:25px">Verified On:</div>
                                </div>
                                <div class="col-md-6">
                                    <div>
                                        @(Html.DevExtreme().CheckBox()
                                            .ID("ApprovedBy")
                                            )<span style="margin-left:5px">Approved By:</span>
                                    </div>
                                    <div style="margin-left:25px">Approved On:</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        @*  <div class="dx-fieldset horizontal-container " style="margin-top:-15px;margin-bottom:0px">
        <div class="form-group">
        <label for="PurchaseVoucherNo" class="button-alignment-down">Cheque</label>
        @(
        Html.DevExtreme().TextBox()
        .ID("PurchaseVoucherNo")
        .Value(null)
        )
        </div>
        <div class="form-group">
        <label for="PurchaseVoucherNo" class="button-alignment-down">Voucher No</label>
        @(
        Html.DevExtreme().TextBox()
        .ID("PurchaseVoucherNo")
        .Value(null)
        )
        </div>
        <div class="form-group">
        <label for="PurchaseVoucherNo" class="button-alignment-down">Voucher No</label>
        @(
        Html.DevExtreme().TextBox()
        .ID("PurchaseVoucherNo")
        .Value(null)
        )
        </div>
        <div class="form-group">
        <label for="EffectiveDate" class="button-alignment-down">Effective Date</label>
        @(Html.DevExtreme().DateBox()
        .ID("EffectiveDate")
        .InputAttr("aria-label", "Date")
        .LabelMode(EditorLabelMode.Outside)
        .Type(DateBoxType.Date)
        .DisplayFormat("yyyy-MM-dd")
        .Value(new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1))
        )
        </div>

        <div class="form-group">
        <label for="PurchaseVoucherNo" class="button-alignment-down">Voucher No</label>
        @(
        Html.DevExtreme().TextBox()
        .ID("PurchaseVoucherNo")
        .Value(null)
        )
        </div>

        <div class="form-group">
        <label for="PurchaseVoucherNo" class="button-alignment-down">Voucher No</label>
        @(
        Html.DevExtreme().TextBox()
        .ID("PurchaseVoucherNo")
        .Value(null)
        )
        </div>

        </div> *@

        <div>
            @await Html.PartialAsync("_InputFormFooter")
        </div>
        <!-- Drop Down Grid Template -->
        <!-- Drop Down Account Head Grid Template -->
        @using (Html.DevExtreme().NamedTemplate("PaymentAmountContentTemplate"))
        {
            @(Html.DevExtreme().DataGrid()
                .ID("accounthead-datagrid")
                .DataSource(d => d.WebApi()
                .Controller("VoucherMaster")
                .LoadAction("GetPaymentAccounts")
                .LoadMode(DataSourceLoadMode.Raw)
                .Key("AccountGroupId")
                )
                .WordWrapEnabled(true)
                .ShowBorders(true)
                .SearchPanel(sp => sp.HighlightSearchText(true))
                .Selection(sl => sl.Mode(SelectionMode.Single)) // Set to Single selection mode
                .OnSelectionChanged("dataGridSelectionChanged")
                .OnInitialized("dataGridInitialized")
                .HeaderFilter(p => p.Visible(true))
                .ShowBorders(true)
                .HoverStateEnabled(true)
                .Paging(p => p.PageSize(15))
                .FilterRow(f => f.Visible(true))
                .Scrolling(s => s.Mode(GridScrollingMode.Virtual))
                .Height(345)
                .Selection(s => s.Mode(SelectionMode.Single))
                .SelectedRowKeys(new JS(@"component.option(""value"") ? [component.option(""value"")] : []"))
                @*  .Columns(columns =>
        {
        columns.Add().DataField("AccountId");
        columns.Add().DataField("AccountHead");
        columns.Add().DataField("AccountHeadArabic");
        columns.Add().DataField("IsLedgerObselete").Alignment(HorizontalAlignment.Center)
        .CellTemplate(@<text>
        <div class="dx-icon">
        <%= data.IsLedgerObselete ? '<i style="color:green" class="fa fa-toggle-on"></i>' : '<i style="color:red" class="fa fa-toggle-off"></i>' %>
        </div>
        </text>);

        }) *@
                )
        }
        @using (Html.DevExtreme().NamedTemplate("AccountHeadContentTemplate"))
        {
            @(Html.DevExtreme().DataGrid()

                .ID("accounthead-datagrid")
                .DataSource(d => d.WebApi()
                .Controller("VoucherMaster")
                .LoadAction("GetAccountHead")
                .LoadMode(DataSourceLoadMode.Raw)
                .Key("VoucherNo")
                )
                .WordWrapEnabled(true)
                .ShowBorders(true)
                .SearchPanel(sp => sp.HighlightSearchText(true))
                .Selection(sl => sl.Mode(SelectionMode.Single)) // Set to Single selection mode
                .OnSelectionChanged("dataGridAccountHeadSelectionChanged")
                .OnInitialized("dataGridAccountHeadInitialized")
                .HeaderFilter(p => p.Visible(true))
                .ShowBorders(true)
                .HoverStateEnabled(true)
                .Paging(p => p.PageSize(15))
                .FilterRow(f => f.Visible(true))
                .Scrolling(s => s.Mode(GridScrollingMode.Virtual))
                .Height(345)
                .Selection(s => s.Mode(SelectionMode.Single))
                .SelectedRowKeys(new JS(@"component.option(""value"") ? [component.option(""value"")] : []"))
                @*  .Columns(columns =>
        {
        columns.Add().DataField("AccountId");
        columns.Add().DataField("AccountHead");
        columns.Add().DataField("AccountHeadArabic");
        columns.Add().DataField("IsLedgerObselete").Alignment(HorizontalAlignment.Center)
        .CellTemplate(@<text>
        <div class="dx-icon">
        <%= data.IsLedgerObselete ? '<i style="color:green" class="fa fa-toggle-on"></i>' : '<i style="color:red" class="fa fa-toggle-off"></i>' %>
        </div>
        </text>);

        }) *@
                )
        }

    </div>
    @* </div> *@
    <script>
        $(function () {
            $.ajax({
                url: "/api/VoucherMaster/GetNewCPVoucherNo",
                type: 'GET',
                success: function (data) {
                    // Set the value in the TextBox
                    $("#VoucherNo").dxTextBox("instance").option("value", data);
                },
                error: function (xhr, status, error) {
                    console.error("Error loading Voucher No:", error);
                }
            });
            $("#costAllocationPopup").dxPopup({
                title: "Cost Allocation",
                width: 300,
                height: 200,
                visible: false,
                showCloseButton: true,
                closeOnOutsideClick: true,

            });
        });

        function showChequePopup() {
            $("#chequePopup").dxPopup("instance").show();
        }

        function saveChequeDetails() {
            // Logic for saving cheque details goes here
            $("#chequePopup").dxPopup("instance").hide();
        }


        $("#btnSave").on("click", function (e) {
            e.preventDefault();

            // debugger;
            var VM = {
                // alert($("#VoucherNo").dxTextBox("instance").option("value"));
                "VoucherNo": $("#VoucherNo").dxTextBox("instance").option("value"),

                "VoucherDate": $("#VoucherDate").dxDateBox("instance").option("value"),

                "VoucherEffectiveDate": $("#VoucherEffectiveDate").dxDateBox("instance").option("value"),

                // "PaymentAccount": $("#accountDropDownBox").dxSelectBox("instance").option("value"),

                "ChequeNoReferenceNo": $("#ChequeNoReferenceNo").dxTextBox("instance").option("value"),

                "VoucherNarration": $("#VoucherNarration").dxTextBox("instance").option("value"),

                "BillNo": $("#BillNo").dxTextBox("instance").option("value"),

                "BillDate": $("#BillDate").dxDateBox("instance").option("value"),

                "BillPaidTo": $("#BillPaidTo").dxTextBox("instance").option("value"),

                "Remarks": $("#Remarks").dxTextBox("instance").option("value"),

                // "PaymentAccount": $("#accountDropDownBox").dxSelectBox("instance").option("value"),
                "IsVerified": $("#VerifiedBy").dxCheckBox("instance").option("value"),

                "IsApproved": $("#ApprovedBy").dxCheckBox("instance").option("value"),

                "VoucherVerifiedOn": new Date(),
                "VoucherApprovedOn": new Date()
            };

            $.ajax({
                type: "POST",
                url: "/api/VoucherMaster/SaveVoucher",
                contentType: "application/json",
                data: JSON.stringify(VM),
                dataType: "json",
                success: function (response) {
                    if (response.success) {
                        alert("Data saved successfully..");

                    } else {
                        alert("Update failed: " + response.message);
                    }
                },
                error: function (xhr, status, error) {
                    alert("Error occurred while updating data: " + error);
                }
            });
        });
        function addCostAllocation() {
            $("#costAllocationPopup").dxPopup("instance").show();
        }
        function saveCostAllocation() {
            $("#costAllocationPopup").dxPopup("instance").close();
        }
        function dropDownBoxOnInput(e) {
            const ddbInstance = e.component;
            if (!ddbInstance.option("opened")) ddbInstance.open();


            const text = ddbInstance.option("text");
            if (dataGrid) {
                dataGrid.option("searchPanel.text", text);
            }
        }

        function onOpened(e) {
            setTimeout(() => {
                e.component.focus();
            });
        }

        function onKeyDown(e) {
            const ddbInstance = e.component;
            if (e.event.keyCode !== 40) return;
            if (!ddbInstance.option("opened")) {
                ddbInstance.open();
            } else {
                let focusedIndex = dataGrid.option("focusedRowIndex");
                let visibleRows = dataGrid.getVisibleRows().length - 1;
                if (focusedIndex === -1 || visibleRows < focusedIndex) focusedIndex = 0;
                dataGrid.focus(dataGrid.getRowElement(focusedIndex));
            }
        }

        function dataGridSelectionChanged(e) {
            const selectedKey = e.selectedRowKeys[0]; // Get the first selected key, if any
            const ddbInstance = $("#accountDropDownBox").dxDropDownBox("instance");

            if (selectedKey) {
                ddbInstance.option("value", selectedKey);
                if (ddbInstance.option("opened")) {
                    ddbInstance.close();
                }
            }

        }
        // function dataGridAccountHeadSelectionChanged(e) {
        //     const selectedKey = e.selectedRowKeys[0];
        //     const ddbInstance = $("#AccountHeadDropDown").dxDropDownBox("instance");

        //     if (selectedKey) {
        //         ddbInstance.option("value", selectedKey);
        //         if (ddbInstance.option("opened")) {
        //             ddbInstance.close();
        //         }
        //     }

        // }
        function dataGridInitialized(e) {
            dataGrid = e.component;
        }
        function dataGridAccountHeadInitialized(e) {
            dataGrid = e.component;
        }
        function dataGridAccountHeadSelectionChanged(e) {
            const selectedKey = e.selectedRowKeys[0];
            const ddbInstance = $("#ddAccountHead").dxDropDownBox("instance");

            if (selectedKey) {
                ddbInstance.option("value", selectedKey);
                if (ddbInstance.option("opened")) {
                    ddbInstance.close();
                }
            }

        }

        //Add
        function addVoucherEntry() {
            var VE = {
                "VoucherNo": $("#VoucherNo").dxTextBox("instance").option("value"),
                // "VoucherDate": $("#VoucherDate").dxDateBox("instance").option("value"),
                // "EffectiveDate": $("#EffectiveDate").dxDateBox("instance").option("value"),
                "AccountHead": $("#ddAccountHead").dxDropDownBox("instance").option("value"),
                "VoucherAmount": $("#txtVoucherAmount").dxTextBox("instance").option("value"),
                "DrCr": $("#sbDrCr").dxSelectBox("instance").option("value"),
                "AddedBy": "102",
                "AddedOn": new Date(),
                "EntryNarration": $("#txtEntryNarration").dxTextArea("instance").option("value")
            };

            $.ajax({
                type: "POST",
                url: "/api/VoucherMaster/AddVoucherEntry",
                contentType: "application/json",
                data: JSON.stringify(VE),
                dataType: "json",
                success: function (response) {
                    $("#dataGrid").dxDataGrid("instance").option("dataSource", response.data);
                },
                error: function (xhr, status, error) {
                    alert("Error occurred while updating data: " + error);
                }
            });
            //$("#costAllocationPopup").dxPopup("instance").show();
        }
    </script>
