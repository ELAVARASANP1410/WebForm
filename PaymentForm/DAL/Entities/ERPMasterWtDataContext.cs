// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.Data.SqlClient;
using PaymentForm.Areas.Finance.Models;
namespace PaymentForm.DAL.Entities;

public partial class ERPMasterWtDataContext : DbContext
{
    public ERPMasterWtDataContext(DbContextOptions<ERPMasterWtDataContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Qry201VoucherEntryScreenDisplay> Qry201VoucherEntryScreenDisplays { get; set; }

    public virtual DbSet<QryCashAndBankAccount> QryCashAndBankAccounts { get; set; }

    public virtual DbSet<Tbl201VoucherEntry> Tbl201VoucherEntries { get; set; }

    public virtual DbSet<Tbl201VoucherMaster> Tbl201VoucherMasters { get; set; }

    

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
		modelBuilder.Entity<VoucherResult>().HasNoKey();
		modelBuilder.UseCollation("SQL_Latin1_General_CP1_CI_AS");

        modelBuilder.Entity<Qry201VoucherEntryScreenDisplay>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("qry201VoucherEntryScreenDisplay");

            entity.Property(e => e.AccountHead)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.AddedBy).IsUnicode(false);
            entity.Property(e => e.AddedOn).HasColumnType("datetime");
            entity.Property(e => e.CrAmount).HasColumnType("money");
            entity.Property(e => e.DrAmount).HasColumnType("money");
            entity.Property(e => e.DrCr)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.VoucherAmount).HasColumnType("money");
            entity.Property(e => e.VoucherAmountFormatted).HasColumnType("money");
            entity.Property(e => e.VoucherEntryNo).ValueGeneratedOnAdd();
            entity.Property(e => e.VoucherNo)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<QryCashAndBankAccount>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("QryCashAndBankAccounts");

            entity.Property(e => e.AccountGroup)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.AccountGroupId)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("AccountGroupID");
            entity.Property(e => e.AccountHead)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.AccountId)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("AccountID");
            entity.Property(e => e.MasterGroup)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.MasterGroupId)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("MasterGroupID");
            entity.Property(e => e.ReferenceNo)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Tbl201VoucherEntry>(entity =>
        {
            entity.HasKey(e => e.VoucherEntryNo);

            entity.ToTable("tbl201VoucherEntry");

            entity.HasIndex(e => e.VoucherNo, "IX_tbl201VoucherEntry");

            entity.HasIndex(e => e.AccountHead, "IX_tbl201VoucherEntry_1");

            entity.Property(e => e.AccountHead)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.AddedBy).IsUnicode(false);
            entity.Property(e => e.AddedOn).HasColumnType("datetime");
            entity.Property(e => e.BankClearedOn).HasColumnType("datetime");
            entity.Property(e => e.CostAllocatedFromClaim)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DrCr)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.EmpCostAllocFromClaim)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.ExpenseClaimRefNo).IsUnicode(false);
            entity.Property(e => e.FinalStatus)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PaymentStatus)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PayrollAdditionId).HasColumnName("PayrollAdditionID");
            entity.Property(e => e.PropertyCostAllocFromClaim)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.ReconciliationRemarks).IsUnicode(false);
            entity.Property(e => e.SupplierVoucherNo)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.VoucherAmount).HasColumnType("money");
            entity.Property(e => e.VoucherNo)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Tbl201VoucherMaster>(entity =>
        {
            entity.HasKey(e => e.VoucherNo);

            entity.ToTable("tbl201VoucherMaster");

            entity.HasIndex(e => e.VoucherDate, "IX_tbl201VoucherMaster");

            entity.Property(e => e.VoucherNo)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.AuditVerifiedBy).IsUnicode(false);
            entity.Property(e => e.AuditVerifiedOn).HasColumnType("datetime");
            entity.Property(e => e.BillDate).HasColumnType("datetime");
            entity.Property(e => e.BillNo).IsUnicode(false);
            entity.Property(e => e.BillPaidTo).IsUnicode(false);
            entity.Property(e => e.BillRemarks).IsUnicode(false);
            entity.Property(e => e.CogsInvoiceNo)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DeliveryNoteNo)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.InvoiceDueDate).HasColumnType("datetime");
            entity.Property(e => e.InvoiceSubmittedDate).HasColumnType("datetime");
            entity.Property(e => e.ReferenceNote).IsUnicode(false);
            entity.Property(e => e.RentalPayslipNo)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.SalesPersonCode)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.VoucherApprovedBy).IsUnicode(false);
            entity.Property(e => e.VoucherApprovedOn).HasColumnType("datetime");
            entity.Property(e => e.VoucherDate).HasColumnType("datetime");
            entity.Property(e => e.VoucherEffectiveDate).HasColumnType("datetime");
            entity.Property(e => e.VoucherEnteredBy).IsUnicode(false);
            entity.Property(e => e.VoucherEnteredOn).HasColumnType("datetime");
            entity.Property(e => e.VoucherModifiedBy).IsUnicode(false);
            entity.Property(e => e.VoucherModifiedOn).HasColumnType("datetime");
            entity.Property(e => e.VoucherRefNo).IsUnicode(false);
            entity.Property(e => e.VoucherType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.VoucherVerifiedBy).IsUnicode(false);
            entity.Property(e => e.VoucherVerifiedOn).HasColumnType("datetime");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}